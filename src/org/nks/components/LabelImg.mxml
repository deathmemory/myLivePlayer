<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

@see spark.components.Button

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minWidth="21" minHeight="21" alpha.disabled="0.5">
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.Button")]
		]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		<![CDATA[         
			/* Define the skin elements that should not be colorized. 
			For button, the graphics are colorized but the label is not. */
			static private const exclusions:Array = ["labelDisplay"];
			
			/** 
			 * @private
			 */     
			override public function get colorizeExclusions():Array {return exclusions;}
			
			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor = true;
				super.initializationComplete();
			}  
			
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				var cr:Number = getStyle("cornerRadius");
				
				if (cornerRadius != cr)
				{
					cornerRadius = cr;
				}
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			[Bindable]
			private var cornerRadius:Number = 2;
		]]>        
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" />
		<s:State name="down" />
		<s:State name="disabled" />
	</s:states>
	<!--
	<s:Rect id="fill_up" left="1" right="1" top="1" bottom="1" radiusX="{cornerRadius}" includeIn="up">
	<s:fill>
	<s:SolidColor color="0xdf380b"/>
	</s:fill>
	</s:Rect>
	
	<s:Rect id="fill_over" left="1" right="1" top="1" bottom="1" radiusX="{cornerRadius}" includeIn="over">
	<s:fill>
	<s:SolidColor color="0xf35b32"/>
	</s:fill>
	</s:Rect>
	
	<s:Rect id="fill_down" left="1" right="1" top="1" bottom="1" radiusX="{cornerRadius}" includeIn="down">
	<s:fill>
	<s:SolidColor color="0xdf380b"/>
	</s:fill>
	</s:Rect>
	
	<s:Rect id="fill_disabled" left="1" right="1" top="1" bottom="1" radiusX="{cornerRadius}" includeIn="disabled">
	<s:fill>
	<s:SolidColor color="0xf1f1f1"/>
	</s:fill>
	</s:Rect>
	-->
	<s:BitmapImage id="bgpic" source="{hostComponent.getStyle('imgPath')}"  />
	
	<!-- layer 8: text -->
	<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	<s:HGroup horizontalCenter="0" verticalCenter="1" gap="2" left="10" right="10"
			  top="2" bottom="2">
		<s:BitmapImage id="iconDisplay" source="{hostComponent.getStyle('icon')}"/>        
		<s:Label id="labelDisplay"
				 textAlign="center"
				 verticalAlign="middle"
				 maxDisplayedLines="1"
				 height="100%"
				 width="100%">
		</s:Label>
	</s:HGroup>
	
</s:SparkSkin>
